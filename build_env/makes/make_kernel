RED  =\033[0;31m
NC   =\033[0m # No Color

CFLAGS            = -O2 -Wall -fms-extensions -c -s -std=c99 -G 0
GCC_MIPS          = mips-elf-gcc $(CFLAGS)
AS_MIPS           = mips-elf-as
LD_MIPS           = mips-elf-ld
DUMP_MIPS         = mips-elf-objdump
COPY_MIPS         = mips-elf-objcopy -I elf32-bigmips -O binary

#https://www.gnu.org/software/make/manual/make.html#Automatic-Variables

#------------- HAL ASSEMBLY -------------
BOOT    		  = HAL_kernel_asm
BOOT_SRC	  	  = hal/mips/HAL_kernel_asm.S

#------------- HAL KERNEL ---------------
HAL_KERNEL_DIR	  = hal/mips/
HAL_NAME		  = HAL_kernel
HAL_KERNEL_SRC = $(addsuffix .c, $(addprefix $(HAL_KERNEL_DIR), $(HAL_NAME) ) ) $(addsuffix .h, $(addprefix $(HAL_KERNEL_DIR), $(HAL_NAME) ) )
HAL_KERNEL_TGT = $(addsuffix .o, $(addprefix $(HAL_KERNEL_DIR), $(HAL_NAME) ) )

#------------- MODULES KERNEL -----------
MODULES_DIR = kernel/modules/
MODULES_NAMES = utils packet pending_service task_communication TCB monitor enforcer_mapping enforcer_migration enforcer_sdn task_scheduler

MODULES_SRC = $(addsuffix .c, $(addprefix $(MODULES_DIR), $(MODULES_NAMES) ) ) $(addsuffix .h, $(addprefix $(MODULES_DIR), $(MODULES_NAMES) ) )
MODULES_TGT = $(addsuffix .o, $(addprefix $(MODULES_DIR), $(MODULES_NAMES) ) )

#------------- MAIN KERNEL --------------
KERNEL 	  		  = kernel
KERNEL_SRC 		  = kernel/kernel.c 
KERNEL_TGT 	 = $(addsuffix .o, $(addprefix $(MODULES_DIR), $(MODULES_NAMES) ) ) $(addsuffix .o, $(addprefix $(HAL_KERNEL_DIR), $(HAL_NAME) ) )

default: $(KERNEL).txt 

$(HAL_KERNEL_TGT): $(HAL_KERNEL_SRC)
	@printf "${RED}Compiling HAL %s ...${NC}\n" "$*.c"
	$(GCC_MIPS) -o $*.o $*.c

$(MODULES_TGT): $(HAL_KERNEL_TGT) $(MODULES_SRC)
	@printf "${RED}Compiling Module %s ...${NC}\n" "$*.c"
	$(GCC_MIPS) -o $*.o $*.c

$(KERNEL).txt: $(HAL_KERNEL_TGT) $(MODULES_TGT) $(KERNEL_SRC) $(BOOT_SRC)
	@printf "${RED}Compiling Kernel: %s ...${NC}\n" "$(KERNEL).c"
	$(AS_MIPS) --defsym sp_addr=$(PAGE_SP_INIT) -o $(BOOT).o $(BOOT_SRC)
	$(GCC_MIPS) -o $(KERNEL).o $(KERNEL_SRC)
	$(LD_MIPS) --section-start=".init"=0 -Map $(KERNEL).map -s -N -o $(KERNEL).elf $(BOOT).o $(KERNEL).o $(KERNEL_TGT) 
	$(LD_MIPS) --section-start=".init"=0 -Map $(KERNEL)_debug.map -o $(KERNEL)_debug.elf $(BOOT).o $(KERNEL).o $(KERNEL_TGT)
	$(DUMP_MIPS) -S $(KERNEL)_debug.elf > $(KERNEL).lst
	$(COPY_MIPS) -R .MIPS.abiflags -R .reginfo $(KERNEL).elf $(KERNEL).bin
	hexdump -v -e '1/1 "%02x" 1/1 "%02x" 1/1 "%02x" 1/1 "%02x" "\n"' $(KERNEL).bin > $(KERNEL).txt

clean:
	@printf "Cleaning up\n"
	@rm -rf modules/*.o
	@rm -rf *.o
	@rm -rf *.bin
	@rm -rf *.map
	@rm -rf *.lst
	@rm -rf *.txt
	@rm -rf *.elf



